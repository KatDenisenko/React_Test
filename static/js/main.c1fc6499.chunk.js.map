{"version":3,"sources":["Authentication/Authentication.module.css","IpComp/IpComponent.module.css","DiscoverySource/DiscoverySource.module.css","CSV/CSV.module.css","DiscoverModal/DiscoverModal.module.css","App.module.css","WizardSteps/WizardSteps.module.css","SelectedOptions/SelectedOptions.module.css","DiscoveryOption/DiscoveryOption.module.css","redux/actions/snmpConfigActions.js","redux/actions/types.js","Authentication/Authentication.js","SelectedOptions/SelectedOptions.js","IpComp/IpComponent.js","IpRangeComp/IpRangeComp.js","FileModal/FileModal.js","CSV/CSV.js","DiscoverySource/DiscoverySource.js","DiscoveryOption/DiscoveryOption.js","redux/actions/contentActions.js","DiscoverModal/DiscoverModal.js","WizardSteps/WizardSteps.js","App.js","serviceWorker.js","redux/reducers/contentReducer.js","redux/reducers/snmpConfigReducors.js","redux/reducers/index.js","redux/store/store.js","index.js","IpRangeComp/IpRangeComp.module.css"],"names":["module","exports","borderWrapper","borderWrapperSegment","ipWrapper","ipValid","ipNotValid","emptyDiv","DiscoverySourceWrapper","message","csv","errorMessage","discoverModalWrapper","AppWrapper","accordionWrapper","DiscoveryOption","stepsWrapper","accordionDiscoverySource","buttonsWrapper","stepWrapper","stepTitle","ui","steps","step","checkboxesWrapper","checkBox","setSnmpConfig","data","type","removeSnmpConfig","Authentication","state","contextName","engineId","checkboxAuthenticationValue","authenticationPassword","securityOptions","readCommunity","_this","props","version","handleChange","_callee","e","key","value","_this$state","snmpConfig","regenerator_default","a","wrap","_context","prev","next","target","name","setState","Object","defineProperty","snmpv1","snmpv2","snmpv3","contextEngineID","authenticationAlgorithm","password","code","encryptionAlgorithm","stop","this","handleChangeCheckBox","_ref2","handleChangeDropdown","textContent","clearFunc","clear","prevProps","console","log","react_default","createElement","Segment","inverted","className","style","Form","Field","Dropdown","onChange","fluid","selection","options","text","Input","required","label","placeholder","Header","as","textAlign","Group","inline","widths","Checkbox","radio","checked","Component","connect","dispatch","SelectedOptions","activeIndex","_ref","handleChangeInput","handleClick","titleProps","newIndex","index","Accordion","Title","active","onClick","Icon","Content","src_Authentication_Authentication","optionCompletedFunc","IpComponent","ipValue","handlerChangeIp","color","validName","pattern","IpRangeComp","ipStartValid","ipEndValid","ipStart","ipEnd","IpRangeCompWrapper","FileModal","file","fileName","fileUrl","path","addFile","files","url","URL","createObjectURL","saveFile","recordConnectToStore","tooggleModal","_this$props","showModal","closeModal","Modal","open","Actions","Button","content","downLoadFile","src_FileModal_FileModal","discoverySourceInfo","DiscoverySource","handlerChange","dropdown","ipValidation","ip","IpComp_IpComponent","src_IpRangeComp_IpRangeComp","Csv","src_CSV_CSV","showSelectedOptions","grouped","control","setContent","removeContent","DiscoverModal","discover","obj","objectSpread","trigger","floated","Description","inputType","JSON","stringify","WizardSteps","inputeType","ipAddress","startIPAddress","endIPAddress","sourceCompleted","match","arr","split","string","pop","join","arrStart","arrEnd","mainSegmentWrapper","AccordionWrapper","Step","stepGroupWrapper","ordered","background","completed","src_DiscoverySource_DiscoverySource","accordionDiscoveryOption","src_DiscoveryOption_DiscoveryOption","src_SelectedOptions_SelectedOptions","src_DiscoverModal_DiscoverModal","App","src_WizardSteps_WizardSteps","Boolean","window","location","hostname","arguments","length","undefined","action","rootReducer","combineReducers","DevTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1fc6499.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderWrapper\":\"Authentication_borderWrapper__wZ2JS\",\"borderWrapperSegment\":\"Authentication_borderWrapperSegment__-nyFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ipWrapper\":\"IpComponent_ipWrapper__3H7jw\",\"ipValid\":\"IpComponent_ipValid__1PYV-\",\"ipNotValid\":\"IpComponent_ipNotValid__39LuT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emptyDiv\":\"DiscoverySource_emptyDiv__1w8KV\",\"DiscoverySourceWrapper\":\"DiscoverySource_DiscoverySourceWrapper__pKpX3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"CSV_message__2OEpx\",\"csv\":\"CSV_csv__1iKGZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"DiscoverModal_errorMessage__2zW4o\",\"discoverModalWrapper\":\"DiscoverModal_discoverModalWrapper__3GtFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppWrapper\":\"App_AppWrapper__2wXpP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accordionWrapper\":\"WizardSteps_accordionWrapper__26i28\",\"DiscoverySourceWrapper\":\"WizardSteps_DiscoverySourceWrapper__1BM0W\",\"DiscoveryOption\":\"WizardSteps_DiscoveryOption__1AJzC\",\"stepsWrapper\":\"WizardSteps_stepsWrapper__1Rjjg\",\"accordionDiscoverySource\":\"WizardSteps_accordionDiscoverySource___XriO\",\"buttonsWrapper\":\"WizardSteps_buttonsWrapper__2gz6O\",\"stepWrapper\":\"WizardSteps_stepWrapper__2nkHX\",\"stepTitle\":\"WizardSteps_stepTitle__20xdL\",\"ui\":\"WizardSteps_ui__1wflD\",\"steps\":\"WizardSteps_steps__2nl96\",\"step\":\"WizardSteps_step__2Qv6K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderWrapper\":\"SelectedOptions_borderWrapper__G8SAs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxesWrapper\":\"DiscoveryOption_checkboxesWrapper__WQcKU\",\"checkBox\":\"DiscoveryOption_checkBox__1apcD\"};","import * as actionTypes from './types';\r\n\r\nexport const setSnmpConfig = data => ({\r\n    type: actionTypes.SET_SNMP_CONFIG,\r\n    data\r\n});\r\n\r\nexport const removeSnmpConfig = () => ({\r\n    type: actionTypes.REMOVE_SNMP_CONFIG,\r\n})\r\n\r\nexport const updateSnmpConfig = data => ({\r\n    type: actionTypes.UPDATE_SNMP_CONFIG,\r\n    data\r\n});","// Сontent\r\n\r\nexport const SET_CONTENT = 'SET_CONTENT';\r\nexport const REMOVE_CONTENT = 'REMOVREMOVE_CONTENT';\r\nexport const UPDATE_CONTENT = 'UPDATE_CONTENT';\r\n\r\n// snmpConfig \r\nexport const SET_SNMP_CONFIG = 'SET_SNMP_CONFIG';\r\nexport const REMOVE_SNMP_CONFIG = 'REMOVE_SNMP_CONFIG';\r\nexport const UPDATE_SNMP_CONFIG = 'UPDATE_SNMP_CONFIG';\r\n\r\n\r\n// \"inputType\": \"IP\",\r\n// \"ipAddress\":\"1.2.3.4\",\r\n\r\n// \"snmpConfig\": {\r\n// \"version\": \"3\",\r\n// \"snmpv1\": null,\r\n// \"snmpv2\": null,\r\n// \"snmpv3\": {\r\n// \"readCommunity\": \"public\",\r\n// \"securityOptions\": \"Authentication and No Privacy\",\r\n// \"contextName\": \"samplecontext\",\r\n\r\n// \"contextEngineID\": \"sample engine\",\r\n\r\n// \"authenticationAlgorithm\": {\r\n// \"password\": \"random password\",\r\n// \"code\": \"sha\"\r\n// },\r\n// \"encryptionAlgorithm\": {\r\n// \"code\": \"\"","\r\nimport {Form, Dropdown, Header, Segment,Checkbox} from 'semantic-ui-react'\r\nimport React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setSnmpConfig} from '../redux/actions/snmpConfigActions';\r\nimport style from './Authentication.module.css'\r\n\r\nclass Authentication extends Component {\r\n    state={\r\n        contextName:'',//\r\n        engineId:'',\r\n        checkboxAuthenticationValue:'',\r\n        authenticationPassword:'',\r\n        securityOptions:'',\r\n        readCommunity:this.props.readCommunity,\r\n        version:this.props.version,\r\n    }\r\n    handleChange =async(e)=> {\r\n        \r\n        let key = e.target.name;\r\n        let value = e.target.value;\r\n        await this.setState({\r\n            [key]:value\r\n        })\r\n       \r\n        const {contextName, engineId, checkboxAuthenticationValue, authenticationPassword, securityOptions} = this.state;\r\n       if (contextName&&engineId&&checkboxAuthenticationValue&&authenticationPassword&&this.props.readCommunity) {\r\n           \r\n            let snmpConfig = {\r\n                version: 3,\r\n                snmpv1: null,\r\n                snmpv2: null,\r\n                snmpv3: {\r\n                    readCommunity:this.props.readCommunity,\r\n                    securityOptions: securityOptions,\r\n                    contextName: contextName,\r\n                    contextEngineID: engineId,\r\n                    authenticationAlgorithm: {\r\n                        password: authenticationPassword,\r\n                        code: checkboxAuthenticationValue,\r\n                        },\r\n                    encryptionAlgorithm: {\r\n                        code: \"\",\r\n                        }\r\n                }\r\n            }\r\n            \r\n            this.props.setSnmpConfig(snmpConfig)\r\n          \r\n        }\r\n    }\r\n    handleChangeCheckBox = (e, { value }) => this.setState({ checkboxAuthenticationValue:value })\r\n    handleChangeDropdown = (e)=>{\r\n        let value = e.target.textContent;\r\n        this.setState({\r\n            securityOptions:value,\r\n        })\r\n    }\r\n    clearFunc=()=>{\r\n        if (this.props.clear) {\r\n            this.setState({\r\n                contextName:'',//\r\n                engineId:'',\r\n                checkboxAuthenticationValue:'',\r\n                authenticationPassword:'',\r\n                securityOptions:'',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    componentDidUpdate(prevProps){\r\n        if (prevProps.clear !== this.props.clear) {\r\n            console.log('prevProps', prevProps)\r\n            console.log('thisProps',this.props)\r\n             this.clearFunc()\r\n        }\r\n    }\r\n \r\n    render() {\r\n        const securityOptions = [\r\n            {\r\n              text: 'Authentication and No Privacy',\r\n              value:'Authentication and No Privacy'\r\n            }]\r\n        return (\r\n        <Segment inverted className={style.borderWrapperSegment}>\r\n            <Form inverted className={style.borderWrapper}>\r\n                <Form.Field>\r\n                <Dropdown \r\n                onChange={this.handleChangeDropdown}\r\n                value = {this.state.securityOptions}\r\n                fluid selection options={securityOptions} />\r\n                    <Form.Input \r\n                    required\r\n                    fluid label='Context Name' \r\n                    placeholder='sample context'\r\n                    name = 'contextName'\r\n                    value ={this.state.contextName}\r\n                    onChange={this.handleChange}/>\r\n\r\n                    <Form.Input \r\n                    required\r\n                    fluid label='Context Engine ID' \r\n                    placeholder='sample engine'\r\n                    name = 'engineId'\r\n                    value ={this.state.engineId}\r\n                    onChange={this.handleChange}/>\r\n                </Form.Field>\r\n        \r\n                <Header as='h3' textAlign='left'>Authentication algoritm</Header>\r\n        \r\n                <Form.Group inline widths='equal' className={style.borderWrapper}>\r\n                        <Form.Field>\r\n                            <Checkbox\r\n                                radio\r\n                                label='MD5'\r\n                                name='checkboxAuthentication'\r\n                                value='MD5'\r\n                                checked={this.state.checkboxAuthenticationValue === 'MD5'}\r\n                                onChange={this.handleChangeCheckBox}\r\n                                />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Checkbox\r\n                                radio\r\n                                label='SHA'\r\n                                name='checkboxAuthentication'\r\n                                value='SHA'\r\n                                checked={this.state.checkboxAuthenticationValue === 'SHA'}\r\n                                onChange={this.handleChangeCheckBox}\r\n                                />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Checkbox\r\n                                radio\r\n                                label='HMAC128'\r\n                                name='checkboxAuthentication'\r\n                                value='HMAC128'\r\n                                checked={this.state.checkboxAuthenticationValue === 'HMAC128'}\r\n                                onChange={this.handleChangeCheckBox}\r\n                                />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Checkbox\r\n                                radio\r\n                                label='HMAC192'\r\n                                name='checkboxAuthentication'\r\n                                value='HMAC192'\r\n                                checked={this.state.checkboxAuthenticationValue === 'HMAC192'}\r\n                                onChange={this.handleChangeCheckBox}\r\n                                />\r\n                        </Form.Field> \r\n                        <Form.Field>\r\n                            <Checkbox\r\n                                radio\r\n                                label='HMAC256'\r\n                                name='checkboxAuthentication'\r\n                                value='HMAC256'\r\n                                checked={this.state.checkboxAuthenticationValue === 'HMAC256'}\r\n                                onChange={this.handleChangeCheckBox}\r\n                                />\r\n                        </Form.Field> \r\n                        <Form.Field>\r\n                            <Checkbox\r\n                                radio\r\n                                label='HMAC384'\r\n                                name='checkboxAuthentication'\r\n                                value='HMAC384'\r\n                                checked={this.state.checkboxAuthenticationValue === 'HMAC384'}\r\n                                onChange={this.handleChangeCheckBox}\r\n                                />\r\n                            </Form.Field>               \r\n                    </Form.Group>\r\n                    <Form.Input \r\n                        required\r\n                        fluid label='Authentication Password' \r\n                        placeholder='random password'\r\n                        name = 'authenticationPassword'\r\n                        value ={this.state.authenticationPassword}\r\n                        onChange={this.handleChange}/>\r\n            </Form>\r\n            \r\n      </Segment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction MDTP (dispatch) {\r\n    return {\r\n        setSnmpConfig: function (data){\r\n            dispatch(setSnmpConfig(data))\r\n        }\r\n    }\r\n  }\r\n\r\nexport default connect(null,MDTP) (Authentication);\r\n","import React, { Component } from 'react';\r\nimport {Accordion, Form,Checkbox, Icon, Segment, Header} from 'semantic-ui-react'\r\nimport Authentication from '../Authentication/Authentication';\r\nimport style from './SelectedOptions.module.css';\r\n\r\nclass SelectedOptions extends Component {\r\n    state = {\r\n        activeIndex: 0,\r\n    }\r\n    handleChange = (e, { value }) => this.setState({ value })\r\n\r\n    handleChangeInput = (e)=>{\r\n        \r\n        let value = e.target.value;\r\n        let key = e.target.name;\r\n               \r\n        this.setState({\r\n                [key]:value,\r\n        })\r\n       \r\n       \r\n    }\r\n    handleClick = (e, titleProps) => {\r\n        //   const { index } = titleProps;\r\n        //   const { activeIndex } = this.state\r\n          const newIndex = this.state.activeIndex === titleProps.index ? -1 : titleProps.index\r\n      \r\n          this.setState({ \r\n            activeIndex: newIndex,\r\n          })\r\n        }\r\n  \r\n        clearFunc=()=>{\r\n          if (this.props.clear) {\r\n              this.setState({\r\n                readCommunity:'',//\r\n                value:'',\r\n              })\r\n          }\r\n  \r\n      }\r\n  \r\n      \r\n      componentDidUpdate(prevProps){\r\n          if (prevProps.clear !== this.props.clear) {\r\n              console.log('prevProps', prevProps)\r\n              console.log('thisProps',this.props)\r\n               this.clearFunc()\r\n          }\r\n      }\r\n\r\n    render() {\r\n        const { activeIndex } = this.state\r\n      return (\r\n          <Accordion fluid inverted className={style.borderWrapper}>\r\n            <Accordion.Title active={activeIndex === 0} index={0} onClick={this.handleClick}>\r\n              <Icon name='dropdown' />\r\n              Selected options\r\n            </Accordion.Title>\r\n            <Accordion.Content active={activeIndex === 0}>\r\n              <Segment inverted>\r\n                  <Header as='h3' textAlign='left'>SNMP version</Header>\r\n                    <Form inverted>\r\n                      <Form.Group inline widths='equal'>\r\n                          <Form.Field>\r\n                            <Checkbox\r\n                              radio\r\n                              label='v1'\r\n                              name='checkboxRadioGroup'\r\n                              value='v1'\r\n                              checked={this.state.value === 'v1'}\r\n                              onChange={this.handleChange}\r\n                            />\r\n                          </Form.Field>\r\n                          <Form.Field>\r\n                            <Checkbox\r\n                              radio\r\n                              label='v2'\r\n                              name='checkboxRadioGroup'\r\n                              value='v2'\r\n                              checked={this.state.value === 'v2'}\r\n                              onChange={this.handleChange}\r\n                            />\r\n                          </Form.Field>\r\n                          <Form.Field>\r\n                            <Checkbox\r\n                              radio\r\n                              label='v3'\r\n                              name='checkboxRadioGroup'\r\n                              value='v3'\r\n                              checked={this.state.value === 'v3'}\r\n                              onChange={this.handleChange}\r\n                            />\r\n                        </Form.Field>    \r\n                      </Form.Group>\r\n                    </Form>\r\n                {this.state.value?\r\n                <Segment inverted>\r\n                  <Form inverted>\r\n                    <Form.Field>\r\n                      <Form.Input \r\n                        fluid label='Read community' \r\n                        placeholder='Read community'\r\n                        name = 'readCommunity'\r\n                        value ={this.state.readCommunity}\r\n                        onChange={this.handleChangeInput}/>\r\n                    </Form.Field>\r\n                  </Form>\r\n                      {this.state.value==='v3'&& \r\n                      <Authentication clear = {this.props.clear} optionCompletedFunc={this.props.optionCompletedFunc} readCommunity = {this.state.readCommunity} version = {this.state.value}/>}\r\n                </Segment>\r\n                  :null\r\n                }\r\n              \r\n                </Segment>\r\n        </Accordion.Content>\r\n        </Accordion>\r\n        \r\n      )\r\n    }\r\n}\r\n\r\nexport default SelectedOptions;","import React from 'react';\r\nimport {Header,Form} from 'semantic-ui-react'\r\nimport style from './IpComponent.module.css'\r\n\r\n\r\nconst IpComponent = ({ipValid, ipValue, handlerChangeIp}) => {\r\n    \r\n    return (\r\n        <div className = {style.ipWrapper}>\r\n        <Form>\r\n            {/* onSubmit={ipValidation} */}\r\n        <Header  as='h3' color='grey' textAlign='left'>IP</Header>\r\n        <Form.Input\r\n        // type='number'\r\n        name='ip'\r\n        validName='ipValid'\r\n        value={ipValue}\r\n        onChange = {handlerChangeIp}\r\n        pattern='\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}'\r\n        required\r\n         fluid placeholder='Enter IP in format 1.2.3.4.' />\r\n         {ipValue && ipValid && <p className={style.ipValid}>IP valid</p>}\r\n        {ipValue && !ipValid &&<p className={style.ipNotValid}>Please check your IP, it doesn't valid</p>}\r\n        \r\n         \r\n         </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IpComponent;","import React from 'react';\r\nimport {Input, Header} from 'semantic-ui-react';\r\nimport style from './IpRangeComp.module.css'\r\n\r\nconst IpRangeComp = ({ipStartValid, ipEndValid,ipStart, ipEnd, handlerChangeIp}) => {\r\n    return (\r\n        <div className={style.IpRangeCompWrapper}>\r\n            \r\n            <Header color='grey' as='h3' textAlign='left'>Starting IP Address</Header>\r\n            <Input \r\n            fluid placeholder='Enter IP in format 1.2.3.4.' \r\n            name = 'ipStart'\r\n            value={ipStart}\r\n            onChange={handlerChangeIp}\r\n            />\r\n            {ipStart && ipStartValid && <p className={style.ipValid}>Starting IP is valid</p>}\r\n            {ipStart && !ipStartValid &&<p className={style.ipNotValid}>Please check your Starting IP Address, it doesn't valid</p>}\r\n\r\n            <Header color='grey' as='h3' textAlign='left'>Ending IP Address</Header>\r\n            <Input \r\n            fluid placeholder='Enter IP in format 1.2.3.4.' \r\n            name = 'ipEnd'\r\n            value={ipEnd}\r\n            onChange={handlerChangeIp}/>\r\n            {ipEnd && ipEndValid && <p className={style.ipValid}>Ending IP is valid</p>}\r\n            {ipEnd && !ipEndValid &&<p className={style.ipNotValid}>Please check your Ending IP, it doesn't valid</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IpRangeComp;","import React, { Component } from 'react';\r\nimport { Modal, Input, Button, Icon } from 'semantic-ui-react';\r\n\r\n\r\nclass FileModal extends Component {\r\n\r\n    state={\r\n        file:null,\r\n        fileName:'',\r\n        fileUrl:'',\r\n        path:'',\r\n    }\r\n\r\n    addFile=e=>{\r\n\r\n         const file = e.target.files[0];\r\n         if (file) {\r\n            const url =URL.createObjectURL(e.target.files[0]);\r\n            const  path=e.target.value;\r\n\r\n         this.setState({\r\n             fileName:e.target.files[0].name,\r\n             path:path,\r\n             fileUrl:url,\r\n         })\r\n        }\r\n    }\r\n\r\n    saveFile=(e)=>{\r\n        // console.log(this.messagesEnd);\r\n        if(this.state.path) {\r\n            this.props.recordConnectToStore('CSV',this.state.path)\r\n            this.props.tooggleModal()\r\n                // console.log(metadata);\r\n                //  this.props.uploadFile(this.state.file,metadata);\r\n                // this.props.closeModal();\r\n                // this.setState({\r\n                //     file:null,\r\n                // })\r\n        }\r\n        else {\r\n            console.log('File not choosen')\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {showModal, closeModal} = this.props;\r\n        return (\r\n            \r\n            <Modal open={showModal}>\r\n            <Modal.Header>Select File</Modal.Header>\r\n            <Modal.Content>\r\n                <Input\r\n                onChange={this.addFile} fluid  name=\"file\" type=\"file\"/>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button color='teal'  onClick={this.saveFile}>\r\n                <Icon name=\"checkmark\"/> Save\r\n                </Button>\r\n                <Button color='red' onClick={closeModal}>\r\n                <Icon name=\"remove\"/> Cancel\r\n                </Button>\r\n            </Modal.Actions>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileModal;","import React from 'react';\r\nimport {Button} from 'semantic-ui-react';\r\nimport style from './CSV.module.css';\r\nimport {connect} from 'react-redux';\r\nimport FileModal from '../FileModal/FileModal';\r\n\r\nconst CSV = ({tooggleModal,recordConnectToStore, downLoadFile,showModal,closeModal,content}) => {\r\n    \r\n  // console.log(this);\r\n    return (\r\n        <div className={style.csv}>\r\n            <Button color='teal' onClick={tooggleModal}>Select a file ...</Button>\r\n            <FileModal recordConnectToStore ={recordConnectToStore} downLoadFile = {downLoadFile} showModal={showModal} tooggleModal={tooggleModal} closeModal={closeModal}/>\r\n\r\n             {content && <p className={style.message}>Selected file:{content.path}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction MSTP (state) {\r\n\r\n  return {\r\n    content:state.content,\r\n  }\r\n}\r\n\r\nexport default connect(MSTP)(CSV);","import React from 'react';\r\nimport {Dropdown} from 'semantic-ui-react'\r\nimport IpComponent from '../IpComp/IpComponent';\r\nimport IpRangeComp from '../IpRangeComp/IpRangeComp';\r\nimport CSV from '../CSV/CSV';\r\nimport style from './DiscoverySource.module.css';\r\n\r\nconst discoverySourceInfo=[\r\n    {\r\n      text: 'IP',\r\n     value: 'IP',\r\n    },\r\n    {\r\n      text: 'IP Range',\r\n     value: 'IP Range',\r\n    },\r\n    {\r\n      text: 'CSV',\r\n     value: 'CSV',\r\n    },\r\n\r\n]\r\nconst DiscoverySource = ({handlerChange,dropdown,ipValid,ipValidation, handlerChangeIp, ip, ipStart, ipEnd, ipStartValid, ipEndValid, path, tooggleModal, downLoadFile, showModal,closeModal,recordConnectToStore}) => {\r\n    return (\r\n        <div className={style.DiscoverySourceWrapper}>\r\n           <Dropdown \r\n           placeholder='Select Source'\r\n           onChange={handlerChange}\r\n           value = {dropdown}\r\n           fluid selection options={discoverySourceInfo}/>\r\n\r\n            {dropdown==='IP'?\r\n            <IpComponent ipValid={ipValid} ipValidation ={ipValidation} handlerChangeIp={handlerChangeIp} ipValue={ip}/>:\r\n            dropdown==='IP Range'?\r\n            <IpRangeComp handlerChangeIp={handlerChangeIp} ipStart={ipStart}\r\n            ipEnd = {ipEnd} ipStartValid = {ipStartValid} ipEndValid={ipEndValid}/>:\r\n            dropdown==='CSV'?\r\n            <div className={style.Csv}>\r\n            <CSV  path={path} tooggleModal={tooggleModal} recordConnectToStore ={recordConnectToStore} downLoadFile = {downLoadFile} showModal={showModal}  closeModal={closeModal}/>\r\n            </div>\r\n            :\r\n            <div className = {style.emptyDiv} ></div>}\r\n            {/*  */}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiscoverySource;","import React from 'react';\r\nimport {Form,} from 'semantic-ui-react';\r\nimport style from './DiscoveryOption.module.css';\r\n\r\nconst DiscoveryOption = ({showSelectedOptions}) => {\r\n    return (\r\n           <div className={style.checkboxesWrapper}> \r\n                {/* className={style.checkboxesWrapper} */}\r\n                <Form.Group grouped>\r\n     \r\n      <Form.Field label='SNMP' control='input' type='checkbox'  onClick = {showSelectedOptions} />\r\n      <Form.Field label='Link' control='input' type='checkbox' />\r\n      <Form.Field label='VLAN' control='input' type='checkbox' />\r\n      <Form.Field label='PORTS' control='input' type='checkbox' />\r\n    </Form.Group>\r\n            {/* <Checkbox className={style.checkBox} label='SNMP' onClick = {showSelectedOptions} />\r\n            <Checkbox label='Link' />\r\n            <Checkbox label='VLAN' />\r\n            <Checkbox label='PORTS' /> */}\r\n          </div> \r\n    );\r\n};\r\n\r\nexport default DiscoveryOption;","import * as actionTypes from './types';\r\n\r\nexport const setContent = data => ({\r\n    type: actionTypes.SET_CONTENT,\r\n    data\r\n});\r\n\r\nexport const removeContent = () => ({\r\n    type: actionTypes.REMOVE_CONTENT,\r\n})\r\n\r\nexport const updateContent = data => ({\r\n    type: actionTypes.UPDATE_CONTENT,\r\n    data\r\n});","import React, { Component } from 'react';\r\nimport { Button, Modal } from 'semantic-ui-react';\r\nimport {connect} from 'react-redux';\r\nimport style from './DiscoverModal.module.css'\r\n\r\nclass DiscoverModal extends Component {\r\n\r\n    state={\r\n        data:{},\r\n    }\r\n    discover=()=>{\r\n        if (this.props.content&&this.props.snmpConfig){\r\n          let obj={\r\n            content:{...this.props.content,snmpConfig:this.props.snmpConfig}\r\n          }     \r\n          this.setState({\r\n            data:{...obj}\r\n        })\r\n      }\r\n      }\r\n\r\n    render() {\r\n        return (\r\n        <Modal className={style.discoverModalWrapper} trigger={<Button floated='right' color='teal' onClick={this.discover}>Discover</Button>}>\r\n            <Modal.Content>\r\n              <Modal.Header as='h3'>Data result</Modal.Header>\r\n                <Modal.Description>\r\n                  {/* {this.props.content.inputType&&this.props.snmpConfig.version} */}\r\n                  {this.props.content.inputType&&this.props.snmpConfig.version?\r\n                  <pre>{JSON.stringify(this.state.data,null,'\\t')}</pre>\r\n                  :<p className={style.errorMessage}>Please check all fields, some fields are empty...</p>}\r\n                \r\n              </Modal.Description>\r\n            </Modal.Content>\r\n        </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nfunction MSTP (state) {\r\n    return {\r\n        content:state.content,\r\n        snmpConfig:state.snmpConfig,\r\n    }\r\n  }\r\n\r\nexport default connect (MSTP, null) (DiscoverModal);","import React, { Component } from 'react'\r\nimport {Accordion, Step, Button, Icon, Segment} from 'semantic-ui-react';\r\n\r\nimport style from './WizardSteps.module.css'\r\nimport SelectedOptions from '../SelectedOptions/SelectedOptions';\r\nimport DiscoverySource from '../DiscoverySource/DiscoverySource';\r\nimport DiscoveryOption from '../DiscoveryOption/DiscoveryOption';\r\nimport {connect} from 'react-redux';\r\nimport {setContent,removeContent} from '../redux/actions/contentActions';\r\nimport {removeSnmpConfig} from '../redux/actions/snmpConfigActions'\r\nimport DiscoverModal from '../DiscoverModal/DiscoverModal';\r\n\r\n class WizardSteps extends Component {\r\n \r\n    state = { \r\n      activeIndex: 0,\r\n      // sourceCompleted:false,\r\n      showSelectedOptions:false,\r\n      // optionCompleted:false,\r\n      dropdown:'',\r\n      showModal:false,\r\n      ip:'',\r\n      ipValid:'',\r\n      ipStart:'',\r\n      ipStartValid:'',\r\n      ipEnd:'',\r\n      ipEndValid:'',\r\n      clear:false,\r\n      \r\n      }\r\n    \r\n    handlerChange = (e)=>{\r\n        let value = e.target.textContent;\r\n        this.setState({\r\n                dropdown:value,\r\n        })\r\n    }\r\n    handlerChangeIp =async (e)=>{\r\n        // e.preventDefault();\r\n        let value = e.target.value;\r\n        let key = e.target.name; \r\n       await this.setState({\r\n                [key]:value,\r\n        })\r\n        this.ipValidation(key)\r\n    }\r\n\r\n    recordConnectToStore=(inputeType, data)=>{\r\n      let content={};\r\n      if (inputeType==='IP') {\r\n        content.inputType=inputeType;\r\n        content.ipAddress=data;\r\n        return  this.props.setContent(content);\r\n      }\r\n      else if (inputeType==='IP Range') {\r\n        \r\n        const{ipStartValid,ipEndValid}=data;\r\n        content.inputType=inputeType;\r\n        content.startIPAddress=ipStartValid;\r\n        content.endIPAddress=ipEndValid;\r\n        return  this.props.setContent(content);\r\n      }\r\n      else if (inputeType==='CSV') {\r\n        content.inputType=inputeType;\r\n        content.path=data;\r\n        return this.props.setContent(content);\r\n      }\r\n    }\r\n\r\n    handleClick = (e, titleProps) => {\r\n    //   const { index } = titleProps;\r\n    //   const { activeIndex } = this.state\r\n          const newIndex = this.state.activeIndex === titleProps.index ? -1 : titleProps.index\r\n        this.setState({ \r\n        activeIndex: newIndex,\r\n      })\r\n    }\r\n\r\n    clearFunc=()=>{\r\n        this.setState(prev=>({\r\n            dropdown:'',\r\n            ip:'',\r\n            ipValid:'',\r\n            ipStart:'',\r\n            ipStartValid:'',\r\n            ipEnd:'',\r\n            ipEndValid:'',\r\n            path:'',\r\n            clear:!prev.clear,\r\n            showSelectedOptions:false,\r\n            // sourceCompleted:false,\r\n        }))\r\n        //remove store here\r\n        this.props.removeContent();\r\n        this.props.removeSnmpConfig();\r\n    }\r\n    tooggleModal=()=>{\r\n        this.setState(prev=>({\r\n            showModal:!prev.showModal,\r\n        }))\r\n    }\r\n    closeModal=()=>{\r\n      this.setState(prev=>({\r\n        showModal:!prev.showModal,\r\n        path:'',\r\n        sourceCompleted:false,\r\n    }))\r\n    }\r\n   \r\n    ipValidation= (key)=> {\r\n      \r\n      let regEx = /^(((1?[1-9]?|10|2[0-4])\\d|25[0-5])($|\\.(?!$))){4}$/gm;\r\n      let ipValid=this.state[key];\r\n      let data={};\r\n      // console.log(ipValid);\r\n      if (this.state[key]) {\r\n          if (ipValid.match(regEx)) {\r\n              if (key==='ip') {\r\n                this.setState({\r\n                  ipValid:ipValid,\r\n                  sourceCompleted:true,\r\n                  ipStart:'',\r\n                  ipEnd:'',\r\n                  clear:false,\r\n                })\r\n                this.recordConnectToStore('IP',ipValid)\r\n\r\n                // console.log('Ip valid')\r\n              }\r\n              else if (key==='ipStart') {\r\n                let copy = ipValid;\r\n                let arr = copy.split('.');\r\n                let poped = arr.pop();\r\n                let string = arr.join('.');\r\n              //  console.log(string);\r\n               \r\n                this.setState({\r\n                  ipStartValid:ipValid,\r\n                  ipEnd:string,\r\n                  ipEndValid:'',\r\n                  ip:'',\r\n                  ipValid:'',\r\n                  path:''\r\n                })\r\n                // data.ipStartValid=ipValid;\r\n                console.log(data);\r\n                if(data.ipStartValid && data.ipEndValid){\r\n                  this.recordConnectToStore('IP Range',data)\r\n                }\r\n                \r\n                // console.log('ipStart valid')\r\n              } \r\n              else if (key==='ipEnd') {\r\n                let arrStart = this.state.ipStartValid.split('.')\r\n                // console.log(arrStart);\r\n                let arrEnd =ipValid.split('.')\r\n                // console.log(arrEnd);\r\n                if (+arrStart[0]===+arrEnd[0]&&+arrStart[1]===+arrEnd[1]&&\r\n                    +arrStart[2]===+arrEnd[2]&&+arrStart[3]<+arrEnd[3]) {\r\n                      // console.log('ipEnd valid');\r\n                      data.ipEndValid=ipValid;\r\n                      data.ipStartValid=this.state.ipStartValid;\r\n                      console.log(data);\r\n                      if(data.ipStartValid && data.ipEndValid){\r\n                        this.recordConnectToStore('IP Range',data)\r\n                      }\r\n                      this.setState({\r\n                        ipEndValid:ipValid,\r\n                        clear:false,\r\n                        \r\n                        // sourceCompleted:true,\r\n                }) \r\n                    }\r\n                    else {\r\n                      this.setState({\r\n                        ipEndValid:'',\r\n                        // sourceCompleted:false,\r\n                })\r\n                      // console.log('ipEnd not valid');\r\n                    }\r\n              }\r\n            }\r\n          else {\r\n            if (key==='ip') {\r\n              this.setState({\r\n                ipValid:'',\r\n                // sourceCompleted:false,\r\n              })\r\n              // console.log(`Ip doesn't valid`)\r\n            }\r\n            else if (key==='ipStart') {\r\n              this.setState({\r\n                ipStartValid:'',\r\n                ipEnd:'',\r\n                // sourceCompleted:false,\r\n              })\r\n              // console.log(`ipStart doesn't valid`)\r\n            } \r\n            else if (key==='ipEnd') {\r\n              this.setState({\r\n                ipEndValid:'',\r\n                // sourceCompleted:false,\r\n              })\r\n           }\r\n        }\r\n      }\r\n   \r\n\r\n}\r\n   \r\n\r\n\r\n showSelectedOptions =()=>{\r\n   this.setState(prev=>({\r\n    showSelectedOptions:!prev.showSelectedOptions\r\n   }))\r\n }\r\n\r\n//  discover=()=>{\r\n//    if (this.props.content&&this.props.snmpConfig){\r\n//      let obj={\r\n//        content:{...this.props.content,snmpConfig:this.props.snmpConfig}\r\n//      }\r\n//      let json=JSON.stringify(obj);\r\n//      console.log(json);\r\n//     return json\r\n//    }\r\n//  }\r\n  \r\n    render() {\r\n      const { activeIndex } = this.state\r\n    \r\n      return (  \r\n    <Segment inverted className={style.mainSegmentWrapper}>\r\n    <Accordion  inverted fluid  className={style.AccordionWrapper}>\r\n      <Step.Group className = {style.stepGroupWrapper} widths={2} ordered> \r\n        <Step background='grey'className = {style.stepWrapper} active={activeIndex === 0} completed={this.props.content.inputType}>\r\n          <Step.Content>\r\n              <Step.Title  className={style.stepTitle}>Discovery source</Step.Title>\r\n          </Step.Content>\r\n              </Step>\r\n              <Step className = {style.stepWrapper} active={activeIndex === 1} completed={this.props.snmpConfig.version}>\r\n              <Step.Content >\r\n          <Step.Title className={style.stepTitle} >Discovery options</Step.Title>\r\n        </Step.Content>\r\n      </Step>\r\n      </Step.Group>\r\n    <div className={style.stepsWrapper}>\r\n        <div className={style.accordionDiscoverySource}>\r\n            <Accordion.Title active={activeIndex === 0} index={0} onClick={this.handleClick}>\r\n                <Icon name='dropdown'/>\r\n                Discovery source\r\n              </Accordion.Title>\r\n              <Accordion.Content active={activeIndex === 0}>\r\n              <DiscoverySource className = {style.DiscoverySourceWrapper} handlerChange ={this.handlerChange} dropdown={this.state.dropdown} ipValid = {this.state.ipValid} ipValidation ={this.ipValidation} handlerChangeIp ={this.handlerChangeIp} ip={this.state.ip} ipStart ={this.state.ipStart} ipEnd = {this.state.ipEnd} ipStartValid = {this.state.ipStartValid} ipEndValid = {this.state.ipEndValid} path = {this.state.path} tooggleModal = {this.tooggleModal} downLoadFile = {this.downLoadFile} showModal = {this.state.showModal}closeModal ={this.closeModal}recordConnectToStore={this.recordConnectToStore}/>\r\n              \r\n              </Accordion.Content>\r\n        </div>\r\n            \r\n     \r\n        <div className={style.accordionDiscoveryOption}>\r\n            <Accordion.Title active={activeIndex === 1} index={1} onClick={this.handleClick}>\r\n                <Icon name='dropdown' />\r\n                    Discovery options\r\n                  </Accordion.Title>\r\n                  <Accordion.Content active={activeIndex === 1}>\r\n                  <DiscoveryOption  className = {style.DiscoveryOption} showSelectedOptions = {this.showSelectedOptions}/>\r\n                  </Accordion.Content>\r\n          </div>\r\n      </div>\r\n    </Accordion>\r\n         \r\n            {this.state.showSelectedOptions&&<SelectedOptions clear={this.state.clear}/>}\r\n            <div className={style.buttonsWrapper}>\r\n                <Button  floated='left' onClick={this.clearFunc}>Clear</Button>\r\n                <DiscoverModal discover={this.discover}/>\r\n            </div>\r\n            \r\n            \r\n       </Segment>\r\n )\r\n    }\r\n}\r\n\r\nfunction MSTP (state) {\r\n  return {\r\n      content:state.content,\r\n      snmpConfig:state.snmpConfig,\r\n  }\r\n}\r\n\r\nfunction MDTP (dispatch) {\r\n  return {\r\n    setContent: function (data){\r\n          dispatch(setContent(data))\r\n      },\r\n      removeContent:function(){\r\n        dispatch(removeContent())\r\n      },\r\n      removeSnmpConfig:function(){\r\n        dispatch(removeSnmpConfig())\r\n      }\r\n  }\r\n}\r\n\r\nexport default connect(MSTP, MDTP) (WizardSteps);","import React, { Component } from 'react';\nimport style from './App.module.css';\nimport WizardSteps from './WizardSteps/WizardSteps';\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={style.AppWrapper}>\n      <WizardSteps/>   \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/types';\r\n\r\nconst Content = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.SET_CONTENT:\r\n            return {...action.data}\r\n        case actionTypes.REMOVE_CONTENT:\r\n            return {}\r\n        case actionTypes.UPDATE_CONTENT:\r\n            return {...action.data}//{...state,links:action.data}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Content;","import * as actionTypes from '../actions/types';\r\n\r\nconst snmpConfig = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.SET_SNMP_CONFIG:\r\n            return {...action.data}\r\n        case actionTypes.REMOVE_SNMP_CONFIG:\r\n            return {}\r\n        case actionTypes.UPDATE_SNMP_CONFIG:\r\n            return {...action.data}//{...state,links:action.data}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default snmpConfig;","import {combineReducers} from 'redux';\r\nimport content from './contentReducer';\r\nimport snmpConfig from './snmpConfigReducors'; \r\n\r\nconst rootReducer = combineReducers({\r\n    content:content,\r\n    snmpConfig:snmpConfig,\r\n})\r\n\r\nexport default rootReducer;","import {createStore} from 'redux';\r\nimport  rootReducer from '../reducers/index'\r\n\r\nconst DevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nconst store = createStore(rootReducer,DevTools);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport 'semantic-ui-css/semantic.min.css';\nimport store from './redux/store/store'\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IpRangeCompWrapper\":\"IpRangeComp_IpRangeCompWrapper__dprRu\",\"ipValid\":\"IpRangeComp_ipValid__3SXW8\",\"ipNotValid\":\"IpRangeComp_ipNotValid__3heyi\"};"],"sourceRoot":""}